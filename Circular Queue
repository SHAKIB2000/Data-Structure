/*Suppose,you have a queue and size of this queue is 7.
Write down the code of circular queue/advance queue.*/
//ID: 191-35-2723
#include <stdio.h>
#define size 7
int cqueue[size];
int front =  - 1;
int rear =  - 1;
void insertcq(int item);
void deletecq();
void display();
void main()
{
    int n, ch;

    while (1)
    {
        printf("\n\n-------------------------------------------\n");
        printf(" Circular Queue:");
        printf("\n-------------------------------------------\n");
        printf("\n\t\t1. Insert \n\t\t2. Delete\n\t\t3. Display\n\t\t0. Exit");
        printf("\n-------------------------------------------\n");
        printf("\nEnter Your Choice  : ");
        scanf("%d", &ch);
        switch (ch)
        {
            case 1:
                printf("\nEnter an integer item : ");
                scanf("%d", &n);
                insertcq(n);
                break;
            case 2:
                deletecq();
                break;
            case 3:
                display();
                break;
            case 0:
                return;
        }
    }
}


void insertcq(int item)
{
    if ((front == 0 && rear == size - 1) || (front == rear + 1))
    {
        printf("queue is full");
        return;
    }
    else if (rear ==  - 1)
    {
        rear++;
        front++;
    }
    else if (rear == size - 1 && front > 0)
    {
        rear = 0;
    }
    else
    {
        rear++;
    }
    cqueue[rear] = item;
}

void display()
{
    int i;
    if(front == -1 )
    {
        printf("\nQueue is Empty");
        return;
    }
    printf("\nThe status of the queue is\n\n");
    if (front > rear)
    {
        for (i = front; i < size; i++)
        {
            printf("%d ", cqueue[i]);
        }
        for (i = 0; i <= rear; i++)
            printf("%d ", cqueue[i]);
    }
    else
    {
        for (i = front; i <= rear; i++)
            printf("%d ", cqueue[i]);
    }
}

void deletecq()
{
    if (front ==  - 1)
    {
        printf("Queue is empty ");
    }
    else if (front == rear)
    {
        printf("\n %d deleted", cqueue[front]);
        front =  rear =  - 1;

    }
    else if (front == size-1)
    {
        printf("\n %d deleted", cqueue[front]);
        front =  0;
    }
    else
    {
        printf("\n %d deleted", cqueue[front]);
        front++;
    }
}
